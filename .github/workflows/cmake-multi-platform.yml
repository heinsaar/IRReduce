# This starter workflow is for a CMake project running on multiple platforms (Linux and Windows).
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on multiple platforms

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # Matrix build for Linux + Windows
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Configure CMake
      # Use *relative* build directory to avoid drive-letter path mangling on Windows.
      run: cmake -S . -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
      shell: bash

    - name: Build
      # Works for single-config (make) and multi-config (Visual Studio) generators alike.
      run: cmake --build build --config ${{env.BUILD_TYPE}}
      shell: bash

    - name: Test
      working-directory: build
      # Execute CTest with the selected configuration on both platforms.
      run: ctest -C ${{env.BUILD_TYPE}}
      shell: bash

    - name: Run Executable
      working-directory: build
      shell: bash
      run: |
        if [[ "${{ runner.os }}" == "Windows" ]]; then
        ./Release/IRReduce.exe \
          --input_file ../ir/hlo_1.ir \
          --output_ir_file ../output/hlo_1.ir \
          --pass_unusedconstants
        else
          ./IRReduce \
            --input_file ../ir/hlo_1.ir \
            --output_ir_file output/hlo_1.ir \
            --pass_unusedconstants
        fi


